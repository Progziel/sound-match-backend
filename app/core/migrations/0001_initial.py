# Generated by Django 3.2.25 on 2025-06-21 04:36

import core.models.challenge
import core.models.sound_pack
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoundPack',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_free', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pack_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/images/')),
                ('sound_1', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_1_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_2', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_2_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_3', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_3_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_4', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_4_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_5', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_5_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_6', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_6_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_7', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_7_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_8', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_8_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_9', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_9_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
                ('sound_10', models.FileField(upload_to='sound_packs/sounds/', validators=[core.models.sound_pack.validate_wav_file])),
                ('sound_10_image', models.ImageField(blank=True, null=True, upload_to='sound_packs/sounds_thumbnails/')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.room')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sound_url', models.URLField(validators=[core.models.challenge.validate_wav_url])),
                ('sound_features', models.JSONField(validators=[core.models.challenge.validate_sound_features])),
                ('levels', models.JSONField(default=list, validators=[core.models.challenge.validate_levels])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_challenges', to=settings.AUTH_USER_MODEL)),
                ('invited_users', models.ManyToManyField(related_name='invited_challenges', to=settings.AUTH_USER_MODEL)),
                ('joined_users', models.ManyToManyField(related_name='joined_challenges', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
